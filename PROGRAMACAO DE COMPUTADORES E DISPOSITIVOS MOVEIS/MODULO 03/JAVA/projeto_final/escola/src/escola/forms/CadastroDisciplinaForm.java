package escola.forms;

import escola.dao.DisciplinaDAO;
import escola.model.Disciplina;
import escola.util.Utills;
import javax.swing.JOptionPane;

/**
 *
 * @author Anderson Lopes
 */
public class CadastroDisciplinaForm extends javax.swing.JFrame {

    //Variável para ações na base de dados
    private DisciplinaDAO dao;

    /**
     * Creates new form CadastroDisciplinaForm
     */
    public CadastroDisciplinaForm() {
        initComponents();
        
        //Instancia objeto necessário para ações na base de dados
        dao = new DisciplinaDAO();
    }

    //Chama o método que limpa os campos da tela
    public void limparCampos() {
        new Utills().LimpaTela(this);
    }

    //Método responsável por validar preenchimento dos campos
    public boolean validarCampos() {
        if (jTextFieldDisciplina.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Disciplina deve ser preenchido!!!", "Campo obrigatório.", JOptionPane.ERROR_MESSAGE);
        } else if (jTextFieldCargaHoraria.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Carga Horária deve ser preenchida!!!", "Campo obrigatório.", JOptionPane.ERROR_MESSAGE);
        } else if (jTextFieldVagas.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Quantidade de Vagas deve ser preenchido!!!", "Campo obrigatório.", JOptionPane.ERROR_MESSAGE);
        } else if (jTextFieldCurso.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Nome do curso deve ser preenchido!!!", "Campo obrigatório.", JOptionPane.ERROR_MESSAGE);
        } else {
            return true;
        }
        return false;
    }

    //Método para popular o objeto que será persistido na base de dados
    public Disciplina montarDisciplina() {
        Disciplina d = new Disciplina();
        d.setDescricao(jTextFieldDisciplina.getText().toUpperCase());
        d.setVagas(Integer.parseInt(jTextFieldVagas.getText().toUpperCase()));
        d.setPeriodo(jComboPeriodo.getSelectedItem().toString().toUpperCase());
        d.setCargaHoraria(Integer.parseInt(jTextFieldCargaHoraria.getText().toUpperCase()));
        d.setCurso(jTextFieldCurso.getText().toUpperCase());
        return d;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabelDisciplina = new javax.swing.JLabel();
        jTextFieldDisciplina = new javax.swing.JTextField();
        jLabelCargaHoraria = new javax.swing.JLabel();
        jTextFieldCargaHoraria = new javax.swing.JTextField();
        jLabelVagas = new javax.swing.JLabel();
        jTextFieldVagas = new javax.swing.JTextField();
        jLabelPeriodo = new javax.swing.JLabel();
        jLabelCurso = new javax.swing.JLabel();
        jTextFieldCurso = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jButtonCadastrar = new javax.swing.JButton();
        jComboPeriodo = new javax.swing.JComboBox<>();
        jButtonLimpar = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("SYSEscola - Cadastro de disciplina");
        setBackground(java.awt.Color.darkGray);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabelDisciplina.setText("Disciplina");

        jTextFieldDisciplina.setToolTipText("Nome da disciplina");
        jTextFieldDisciplina.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabelCargaHoraria.setText("Carga Horária");

        jTextFieldCargaHoraria.setToolTipText("Quantidade de horas/aula");

        jLabelVagas.setText("Vagas");

        jTextFieldVagas.setToolTipText("Número de vagas");

        jLabelPeriodo.setText("Período");

        jLabelCurso.setText("Curso");

        jTextFieldCurso.setToolTipText("Curso da disciplina");

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonCadastrar.setText("Cadastrar");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jComboPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matutino", "Vespertino", "Noturno", "Integral" }));

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDisciplina)
                    .addComponent(jTextFieldCurso)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCadastrar)
                        .addGap(54, 54, 54)
                        .addComponent(jButtonLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCargaHoraria))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelVagas)
                                .addGap(44, 44, 44)
                                .addComponent(jLabelPeriodo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldVagas, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboPeriodo, 0, 193, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDisciplina)
                            .addComponent(jLabelCurso))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDisciplina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCargaHoraria)
                    .addComponent(jLabelVagas)
                    .addComponent(jLabelPeriodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLimpar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed
        if (validarCampos()) {
            //Cadastra na base de dados caso os campos estejam preenchidos
            if (dao.save(montarDisciplina())) {
                JOptionPane.showMessageDialog(rootPane, "Disciplina cadastrada com sucesso!!!", "Concluído.", JOptionPane.INFORMATION_MESSAGE);
                fecharJanela();
            } else {
                //Exibe mensagem de erro caso não insira na base de dados
                JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar disciplina!!!", "Erro.", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonCadastrarActionPerformed
    //Ação do botão cancelar
    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        fecharJanela();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    //Ação do botão limpar
    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_jButtonLimparActionPerformed
    //Fecha a janela ativa e retorna para a tela inicial
    private void fecharJanela() {
        PrincipalForm p = new PrincipalForm();
        p.setVisible(true);
        this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroDisciplinaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroDisciplinaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroDisciplinaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroDisciplinaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroDisciplinaForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboPeriodo;
    private javax.swing.JLabel jLabelCargaHoraria;
    private javax.swing.JLabel jLabelCurso;
    private javax.swing.JLabel jLabelDisciplina;
    private javax.swing.JLabel jLabelPeriodo;
    private javax.swing.JLabel jLabelVagas;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCargaHoraria;
    private javax.swing.JTextField jTextFieldCurso;
    private javax.swing.JTextField jTextFieldDisciplina;
    private javax.swing.JTextField jTextFieldVagas;
    // End of variables declaration//GEN-END:variables
}
